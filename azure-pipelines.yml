name: $(Build.DefinitionName)-$(date:yyyyMMdd)$(rev:.r)

variables:
    buildConfiguration: 'Release'
#  VersionNumber: $(Major).$(Minor).$(rev:.r)
stages:
    - stage: Unit_Tests
      dependsOn: []
      displayName: Unit Tests
      jobs:
          - job: Windows_Unit_Tests
            displayName: Windows
            pool:
                vmImage: windows-latest
            steps:
                - task: UseDotNet@2
                  displayName: Use .Net Core sdk 6.x
                  inputs:
                      version: 6.x

                - task: DotNetCoreCLI@2
                  displayName: 'dotnet restore'
                  inputs:
                      command: 'restore'
                      projects: '**/*.Tests.csproj'
                      restoreArguments: '--source https://www.myget.org/F/umbraconightly/api/v3/index.json --source https://www.myget.org/F/umbracoprereleases/api/v3/index.json --source https://api.nuget.org/v3/index.json'

                - task: DotNetCoreCLI@2
                  displayName: 'dotnet build'
                  inputs:
                      command: 'build'
                      projects: '**/*.Tests.csproj'
                      arguments: '--no-restore'

                - task: DotNetCoreCLI@2
                  displayName: 'dotnet test'
                  inputs:
                      command: test
                      projects: '**/*.Tests.csproj'
                      arguments: '--no-build'

          - job: Linux_Unit_test
            displayName: Linux
            pool:
                vmImage: ubuntu-latest
            steps:
                - task: UseDotNet@2
                  displayName: Use .Net Core sdk 6.x
                  inputs:
                      version: 6.x

                - task: DotNetCoreCLI@2
                  displayName: 'dotnet restore'
                  inputs:
                      command: 'restore'
                      projects: '**/*.Tests.csproj'
                      restoreArguments: '--source https://www.myget.org/F/umbraconightly/api/v3/index.json --source https://www.myget.org/F/umbracoprereleases/api/v3/index.json --source https://api.nuget.org/v3/index.json'

                - task: DotNetCoreCLI@2
                  displayName: 'dotnet build'
                  inputs:
                      command: 'build'
                      projects: '**/*.Tests.csproj'
                      arguments: '--no-restore'

                - task: DotNetCoreCLI@2
                  displayName: 'dotnet test'
                  inputs:
                      command: test
                      projects: '**/*.Tests.csproj'
                      arguments: '--no-build'

    - stage: Nuget_Package
      displayName: 'Nuget'
      dependsOn: [] # this removes the implicit dependency on previous stage and causes this to run in parallel
      jobs:

          - job: CreateNugetPackages
            displayName: 'Create package'
            pool:
                vmImage: 'windows-latest'
            steps:

                - task: UseDotNet@2
                  displayName: 'Use .Net Core sdk 5.0.x'
                  inputs:
                      version: 5.0.x

                - task: DotNetCoreCLI@2
                  displayName: 'dotnet restore'
                  inputs:
                      command: 'restore'
                      projects: '**/UmbracoExamine.PDF.csproj'
                      restoreArguments: '--source https://www.myget.org/F/umbraconightly/api/v3/index.json --source https://www.myget.org/F/umbracoprereleases/api/v3/index.json --source https://api.nuget.org/v3/index.json'

                - task: DotNetCoreCLI@2
                  displayName: 'dotnet build'
                  inputs:
                      command: 'build'
                      projects: '**/UmbracoExamine.PDF.csproj'
                      arguments: '--configuration $(buildConfiguration) --no-restore'

                - task: PowerShell@1
                  displayName: 'dotnet pack'
                  inputs:
                      scriptType: inlineScript
                      inlineScript: >
                          $isRelease = [regex]::matches($env:BUILD_SOURCEBRANCH,"v\d+\/\d+.\d+.*");

                          if ($isRelease.Count -gt 0)
                          {
                             Write-Host "##vso[build.addbuildtag]Release build"
                             dotnet pack --no-build --include-symbols --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) ./src/UmbracoExamine.PDF/UmbracoExamine.PDF.csproj
                          }
                          else
                          {
                             Write-Host "##vso[build.addbuildtag]Continuous build"
                             dotnet pack --no-build --include-symbols --version-suffix nightly.$(Build.BuildId) --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) ./src/UmbracoExamine.PDF/UmbracoExamine.PDF.csproj
                          }
                - task: PublishBuildArtifacts@1
                  displayName: 'Make NuGet Artifacts available for release'
                  inputs:
                      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
                      ArtifactName: packages
